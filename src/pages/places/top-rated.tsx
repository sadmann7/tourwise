import type { UniquePlace } from "@prisma/client";
import { AnimatePresence, motion } from "framer-motion";
import Head from "next/head";
import type { NextPageWithLayout } from "../_app";

// external imports
import Layout from "@/layouts/Layout";
import ErrorScreen from "@/screens/ErrorScreen";
import LoadingScreen from "@/screens/LoadingScreen";
import { api } from "@/utils/api";
import { FaMap, FaWikipediaW } from "react-icons/fa";

const TopPlaces: NextPageWithLayout = () => {
  // unique places query
  const uniquePlacesQuery = api.places.getUnique.useQuery(undefined, {
    refetchOnWindowFocus: false,
  });

  // framer motion
  const container = {
    hidden: { opacity: 1 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
        delayChildren: 0.5,
      },
    },
  };

  if (uniquePlacesQuery.isLoading) {
    return <LoadingScreen />;
  }

  if (uniquePlacesQuery.isError) {
    return <ErrorScreen error={uniquePlacesQuery.error} />;
  }

  return (
    <>
      <Head>
        <title>Top Places | Next Tour</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-24 mb-14 min-h-screen max-w-2xl px-4">
        <h1 className="text-4xl font-bold text-white">Top Places</h1>
        <motion.div
          className="mt-10 grid gap-4"
          variants={container}
          initial="hidden"
          animate="visible"
        >
          <AnimatePresence mode="sync">
            {uniquePlacesQuery.data?.map((place) => (
              <PlaceCard key={place.id} place={place} />
            ))}
          </AnimatePresence>
        </motion.div>
      </main>
    </>
  );
};

export default TopPlaces;

TopPlaces.getLayout = (page) => <Layout>{page}</Layout>;

const PlaceCard = ({ place }: { place: UniquePlace }) => {
  // framer motion
  const item = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 },
  };

  return (
    <motion.div
      key={place.name}
      variants={item}
      className="grid gap-4 rounded-lg bg-neutral-800 p-4 shadow-md ring-1 ring-gray-400"
    >
      <div className="grid gap-2">
        <div className="flex items-center justify-between gap-2">
          <h3 className="text-xl font-semibold text-white">{place.name}</h3>
          <span className="text-sm text-gray-300">{place.like} likes</span>
        </div>
        <span className="text-base text-gray-300">{place.description}</span>
      </div>
      <div className="grid gap-2">
        <a
          aria-label="view on google maps"
          href={`https://www.google.com/maps/search/?api=1&query=${
            place.name ?? ""
          }`}
          target="_blank"
          rel="noreferrer"
          className="flex items-center justify-center gap-2 rounded-lg bg-gray-100 p-2 transition-colors hover:bg-gray-300 active:bg-gray-100"
        >
          <FaMap className="aspect-square w-5" aria-hidden="true" />
          <span className="text-sm font-medium">View on Google Maps</span>
        </a>
        <a
          aria-label="view on wikipedia"
          href={`https://en.wikipedia.org/wiki/${place.name ?? ""}`}
          target="_blank"
          rel="noreferrer"
          className="flex items-center justify-center gap-2 rounded-lg bg-gray-100 p-2 transition-colors hover:bg-gray-300 active:bg-gray-100"
        >
          <FaWikipediaW className="aspect-square w-5" aria-hidden="true" />
          <span className="text-sm font-medium">View on Wikipedia</span>
        </a>
      </div>
    </motion.div>
  );
};
